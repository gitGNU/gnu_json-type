#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Json-Type.
# 
# Json-Type is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Json-Type is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Json-Type.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ json-gentest -C type-path:syntax3
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L syntax3.old <(echo \
'$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }
$ json <<< '\''"$$"'\''
json: error: <stdin>:1:3: meta error: invalid type path: expected key name
json: error: <stdin>:1:3: "$$"
json: error: <stdin>:1:3:   ^
command failed: json <<< '\''"$$"'\''
$ json <<< '\''"$."'\''
json: error: <stdin>:1:3: meta error: invalid type path: expected key name
json: error: <stdin>:1:3: "$."
json: error: <stdin>:1:3:   ^
command failed: json <<< '\''"$."'\''
$ json <<< '\''"$["'\''
json: error: <stdin>:1:3: meta error: invalid type path: expected key name
json: error: <stdin>:1:3: "$["
json: error: <stdin>:1:3:   ^
command failed: json <<< '\''"$["'\''
$ json <<< '\''"$]"'\''
json: error: <stdin>:1:3: meta error: invalid type path: expected key name
json: error: <stdin>:1:3: "$]"
json: error: <stdin>:1:3:   ^
command failed: json <<< '\''"$]"'\'''
) -L syntax3.new <(
echo '$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'
json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; } 2>&1 ||
echo 'command failed: json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'

echo '$ json <<< '\''"$$"'\'''
json <<< '"$$"' 2>&1 ||
echo 'command failed: json <<< '\''"$$"'\'''

echo '$ json <<< '\''"$."'\'''
json <<< '"$."' 2>&1 ||
echo 'command failed: json <<< '\''"$."'\'''

echo '$ json <<< '\''"$["'\'''
json <<< '"$["' 2>&1 ||
echo 'command failed: json <<< '\''"$["'\'''

echo '$ json <<< '\''"$]"'\'''
json <<< '"$]"' 2>&1 ||
echo 'command failed: json <<< '\''"$]"'\'''
)

