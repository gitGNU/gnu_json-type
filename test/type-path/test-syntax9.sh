#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Json-Type.
# 
# Json-Type is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Json-Type is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Json-Type.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ json-gentest -C type-path:syntax9
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L syntax9.old <(echo \
'$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }
$ json <<< '\''"$foo.bar$"'\''
json: error: <stdin>:1:10: meta error: invalid type path: unexpected char
json: error: <stdin>:1:10: "$foo.bar$"
json: error: <stdin>:1:10:          ^
command failed: json <<< '\''"$foo.bar$"'\''
$ json <<< '\''"$foo.bar."'\''
json: error: <stdin>:1:11: meta error: invalid type path: expected key name
json: error: <stdin>:1:11: "$foo.bar."
json: error: <stdin>:1:11:           ^
command failed: json <<< '\''"$foo.bar."'\''
$ json <<< '\''"$foo.bar["'\''
json: error: <stdin>:1:11: meta error: invalid type path: expected number
json: error: <stdin>:1:11: "$foo.bar["
json: error: <stdin>:1:11:           ^
command failed: json <<< '\''"$foo.bar["'\''
$ json <<< '\''"$foo.bar[ "'\''
json: error: <stdin>:1:11: meta error: invalid type path: expected number
json: error: <stdin>:1:11: "$foo.bar[ "
json: error: <stdin>:1:11:           ^
command failed: json <<< '\''"$foo.bar[ "'\''
$ json <<< '\''"$foo.bar[\n"'\''
json: error: <stdin>:1:11: meta error: invalid type path: expected number
json: error: <stdin>:1:11: "$foo.bar[\\n"
json: error: <stdin>:1:11:           ^
command failed: json <<< '\''"$foo.bar[\n"'\''
$ json <<< '\''"$foo.bar]"'\''
json: error: <stdin>:1:10: meta error: invalid type path: unexpected char
json: error: <stdin>:1:10: "$foo.bar]"
json: error: <stdin>:1:10:          ^
command failed: json <<< '\''"$foo.bar]"'\'''
) -L syntax9.new <(
echo '$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'
json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; } 2>&1 ||
echo 'command failed: json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'

echo '$ json <<< '\''"$foo.bar$"'\'''
json <<< '"$foo.bar$"' 2>&1 ||
echo 'command failed: json <<< '\''"$foo.bar$"'\'''

echo '$ json <<< '\''"$foo.bar."'\'''
json <<< '"$foo.bar."' 2>&1 ||
echo 'command failed: json <<< '\''"$foo.bar."'\'''

echo '$ json <<< '\''"$foo.bar["'\'''
json <<< '"$foo.bar["' 2>&1 ||
echo 'command failed: json <<< '\''"$foo.bar["'\'''

echo '$ json <<< '\''"$foo.bar[ "'\'''
json <<< '"$foo.bar[ "' 2>&1 ||
echo 'command failed: json <<< '\''"$foo.bar[ "'\'''

echo '$ json <<< '\''"$foo.bar[\n"'\'''
json <<< '"$foo.bar[\n"' 2>&1 ||
echo 'command failed: json <<< '\''"$foo.bar[\n"'\'''

echo '$ json <<< '\''"$foo.bar]"'\'''
json <<< '"$foo.bar]"' 2>&1 ||
echo 'command failed: json <<< '\''"$foo.bar]"'\'''
)

