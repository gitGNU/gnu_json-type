#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Json-Type.
# 
# Json-Type is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Json-Type is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Json-Type.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ json-gentest -C type-path:list
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L list.old <(echo \
'$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }
$ json <<< '\''{"type":"list","args":["this"]}'\''
{
    "type": "list",
    "args": [
        {
            "type": "this",
            "args": "this",
            "attr": {
                "type": "list",
                "args": [
                    "this"
                ]
            }
        }
    ],
    "attr": {
        "any": null,
        "plain": null,
        "object": null,
        "array": {
            "open": null,
            "closed": null
        }
    }
}
$ json <<< '\''{"type":"list","args":["this.foo"]}'\''
json: error: <stdin>:1:29: type path error: the type at 1:1 is neither an "object" nor a type def
json: error: <stdin>:1:29: {"type":"list","args":["this.foo"]}
json: error: <stdin>:1:29:                             ^
command failed: json <<< '\''{"type":"list","args":["this.foo"]}'\''
$ json <<< '\''{"type":"list","args":["this[0]"]}'\''
{
    "type": "list",
    "args": [
        {
            "type": "this",
            "args": "this[0]",
            "attr": "this[0]"
        }
    ],
    "attr": {
        "any": null,
        "plain": null,
        "object": null,
        "array": {
            "open": null,
            "closed": null
        }
    }
}
$ json <<< '\''{"type":"list","args":["this[1]"]}'\''
json: error: <stdin>:1:29: type path error: index out of range in the "list" at 1:1
json: error: <stdin>:1:29: {"type":"list","args":["this[1]"]}
json: error: <stdin>:1:29:                             ^
command failed: json <<< '\''{"type":"list","args":["this[1]"]}'\''
$ json <<< '\''{"type":"list","args":["this.foo[0]"]}'\''
json: error: <stdin>:1:29: type path error: the type at 1:1 is neither an "object" nor a type def
json: error: <stdin>:1:29: {"type":"list","args":["this.foo[0]"]}
json: error: <stdin>:1:29:                             ^
command failed: json <<< '\''{"type":"list","args":["this.foo[0]"]}'\''
$ json <<< '\''{"type":"list","args":["$foo"]}'\''
json: error: <stdin>:1:25: type path error: the type at 1:1 is neither an "object" nor a type def
json: error: <stdin>:1:25: {"type":"list","args":["$foo"]}
json: error: <stdin>:1:25:                         ^
command failed: json <<< '\''{"type":"list","args":["$foo"]}'\''
$ json <<< '\''{"type":"list","args":["$foo[0]"]}'\''
json: error: <stdin>:1:25: type path error: the type at 1:1 is neither an "object" nor a type def
json: error: <stdin>:1:25: {"type":"list","args":["$foo[0]"]}
json: error: <stdin>:1:25:                         ^
command failed: json <<< '\''{"type":"list","args":["$foo[0]"]}'\''
$ json <<< '\''{"type":"list","args":["$foo.bar"]}'\''
json: error: <stdin>:1:25: type path error: the type at 1:1 is neither an "object" nor a type def
json: error: <stdin>:1:25: {"type":"list","args":["$foo.bar"]}
json: error: <stdin>:1:25:                         ^
command failed: json <<< '\''{"type":"list","args":["$foo.bar"]}'\'''
) -L list.new <(
echo '$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'
json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; } 2>&1 ||
echo 'command failed: json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'

echo '$ json <<< '\''{"type":"list","args":["this"]}'\'''
json <<< '{"type":"list","args":["this"]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["this"]}'\'''

echo '$ json <<< '\''{"type":"list","args":["this.foo"]}'\'''
json <<< '{"type":"list","args":["this.foo"]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["this.foo"]}'\'''

echo '$ json <<< '\''{"type":"list","args":["this[0]"]}'\'''
json <<< '{"type":"list","args":["this[0]"]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["this[0]"]}'\'''

echo '$ json <<< '\''{"type":"list","args":["this[1]"]}'\'''
json <<< '{"type":"list","args":["this[1]"]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["this[1]"]}'\'''

echo '$ json <<< '\''{"type":"list","args":["this.foo[0]"]}'\'''
json <<< '{"type":"list","args":["this.foo[0]"]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["this.foo[0]"]}'\'''

echo '$ json <<< '\''{"type":"list","args":["$foo"]}'\'''
json <<< '{"type":"list","args":["$foo"]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["$foo"]}'\'''

echo '$ json <<< '\''{"type":"list","args":["$foo[0]"]}'\'''
json <<< '{"type":"list","args":["$foo[0]"]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["$foo[0]"]}'\'''

echo '$ json <<< '\''{"type":"list","args":["$foo.bar"]}'\'''
json <<< '{"type":"list","args":["$foo.bar"]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["$foo.bar"]}'\'''
)

