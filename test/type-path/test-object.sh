#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Json-Type.
# 
# Json-Type is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Json-Type is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Json-Type.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ json-gentest -C type-path:object
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L object.old <(echo \
'$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }
$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"this"}]}'\''
{
    "type": "object",
    "args": [
        {
            "name": "foo",
            "type": {
                "type": "this",
                "args": "this",
                "attr": {
                    "type": "object",
                    "args": [
                        {
                            "name": "foo",
                            "type": "this"
                        }
                    ]
                }
            }
        }
    ]
}
$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.foo"}]}'\''
{
    "type": "object",
    "args": [
        {
            "name": "foo",
            "type": {
                "type": "this",
                "args": "this.foo",
                "attr": "this.foo"
            }
        }
    ]
}
$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.bar"}]}'\''
json: error: <stdin>:1:52: type path error: key not found in the "object" at 1:1
json: error: <stdin>:1:52: {"type":"object","args":[{"name":"foo","type":"this.bar"}]}
json: error: <stdin>:1:52:                                                    ^
command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.bar"}]}'\''
$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"this[0]"}]}'\''
json: error: <stdin>:1:52: type path error: the type at 1:1 is neither an "array" nor a "list" nor a type def
json: error: <stdin>:1:52: {"type":"object","args":[{"name":"foo","type":"this[0]"}]}
json: error: <stdin>:1:52:                                                    ^
command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"this[0]"}]}'\''
$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.foo[0]"}]}'\''
json: error: <stdin>:1:56: type path error: the type at 1:47 is neither an "array" nor a "list" nor a type def
json: error: <stdin>:1:56: {"type":"object","args":[{"name":"foo","type":"this.foo[0]"}]}
json: error: <stdin>:1:56:                                                        ^
command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.foo[0]"}]}'\''
$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo"}]}'\''
{
    "type": "object",
    "args": [
        {
            "name": "foo",
            "type": {
                "type": "this",
                "args": "$foo",
                "attr": "$foo"
            }
        }
    ]
}
$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"$bar"}]}'\''
json: error: <stdin>:1:48: type path error: key not found in the "object" at 1:1
json: error: <stdin>:1:48: {"type":"object","args":[{"name":"foo","type":"$bar"}]}
json: error: <stdin>:1:48:                                                ^
command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"$bar"}]}'\''
$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo[0]"}]}'\''
json: error: <stdin>:1:52: type path error: the type at 1:47 is neither an "array" nor a "list" nor a type def
json: error: <stdin>:1:52: {"type":"object","args":[{"name":"foo","type":"$foo[0]"}]}
json: error: <stdin>:1:52:                                                    ^
command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo[0]"}]}'\''
$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo.bar"}]}'\''
json: error: <stdin>:1:52: type path error: the type at 1:47 is neither an "object" nor a type def
json: error: <stdin>:1:52: {"type":"object","args":[{"name":"foo","type":"$foo.bar"}]}
json: error: <stdin>:1:52:                                                    ^
command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo.bar"}]}'\'''
) -L object.new <(
echo '$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'
json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; } 2>&1 ||
echo 'command failed: json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'

echo '$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"this"}]}'\'''
json <<< '{"type":"object","args":[{"name":"foo","type":"this"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"this"}]}'\'''

echo '$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.foo"}]}'\'''
json <<< '{"type":"object","args":[{"name":"foo","type":"this.foo"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.foo"}]}'\'''

echo '$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.bar"}]}'\'''
json <<< '{"type":"object","args":[{"name":"foo","type":"this.bar"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.bar"}]}'\'''

echo '$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"this[0]"}]}'\'''
json <<< '{"type":"object","args":[{"name":"foo","type":"this[0]"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"this[0]"}]}'\'''

echo '$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.foo[0]"}]}'\'''
json <<< '{"type":"object","args":[{"name":"foo","type":"this.foo[0]"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"this.foo[0]"}]}'\'''

echo '$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo"}]}'\'''
json <<< '{"type":"object","args":[{"name":"foo","type":"$foo"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo"}]}'\'''

echo '$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"$bar"}]}'\'''
json <<< '{"type":"object","args":[{"name":"foo","type":"$bar"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"$bar"}]}'\'''

echo '$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo[0]"}]}'\'''
json <<< '{"type":"object","args":[{"name":"foo","type":"$foo[0]"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo[0]"}]}'\'''

echo '$ json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo.bar"}]}'\'''
json <<< '{"type":"object","args":[{"name":"foo","type":"$foo.bar"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"object","args":[{"name":"foo","type":"$foo.bar"}]}'\'''
)

