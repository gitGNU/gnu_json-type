#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Json-Type.
# 
# Json-Type is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Json-Type is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Json-Type.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ json-gentest -C type-path:infinite
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L infinite.old <(echo \
'$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }
$ json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this"}]}'\''
{
    "type": "list",
    "args": [
        {
            "type": "this",
            "args": "this",
            "attr": {
                "type": "list",
                "args": [
                    "this",
                    {
                        "type": "array",
                        "args": "this"
                    }
                ]
            }
        },
        {
            "type": "array",
            "args": {
                "type": "this",
                "args": "this",
                "attr": {
                    "type": "list",
                    "args": [
                        "this",
                        {
                            "type": "array",
                            "args": "this"
                        }
                    ]
                }
            }
        }
    ],
    "attr": {
        "any": null,
        "plain": null,
        "object": null,
        "array": {
            "open": {
                "sym": "this",
                "lo": null,
                "eq": {
                    "val": {
                        "type": "array",
                        "args": "this"
                    },
                    "lo": null,
                    "hi": null
                },
                "hi": null
            },
            "closed": null
        }
    }
}
$ json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this[0]"}]}'\''
{
    "type": "list",
    "args": [
        {
            "type": "this",
            "args": "this",
            "attr": {
                "type": "list",
                "args": [
                    "this",
                    {
                        "type": "array",
                        "args": "this[0]"
                    }
                ]
            }
        },
        {
            "type": "array",
            "args": {
                "type": "this",
                "args": "this[0]",
                "attr": "this"
            }
        }
    ],
    "attr": {
        "any": null,
        "plain": null,
        "object": null,
        "array": {
            "open": {
                "sym": "this[0]",
                "lo": null,
                "eq": {
                    "val": {
                        "type": "array",
                        "args": "this[0]"
                    },
                    "lo": null,
                    "hi": null
                },
                "hi": null
            },
            "closed": null
        }
    }
}
$ json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this[1]"}]}'\''
{
    "type": "list",
    "args": [
        {
            "type": "this",
            "args": "this",
            "attr": {
                "type": "list",
                "args": [
                    "this",
                    {
                        "type": "array",
                        "args": "this[1]"
                    }
                ]
            }
        },
        {
            "type": "array",
            "args": {
                "type": "this",
                "args": "this[1]",
                "attr": {
                    "type": "array",
                    "args": "this[1]"
                }
            }
        }
    ],
    "attr": {
        "any": null,
        "plain": null,
        "object": null,
        "array": {
            "open": {
                "sym": "this[1]",
                "lo": null,
                "eq": {
                    "val": {
                        "type": "array",
                        "args": "this[1]"
                    },
                    "lo": null,
                    "hi": null
                },
                "hi": null
            },
            "closed": null
        }
    }
}
$ json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this[1][0]"}]}'\''
{
    "type": "list",
    "args": [
        {
            "type": "this",
            "args": "this",
            "attr": {
                "type": "list",
                "args": [
                    "this",
                    {
                        "type": "array",
                        "args": "this[1][0]"
                    }
                ]
            }
        },
        {
            "type": "array",
            "args": {
                "type": "this",
                "args": "this[1][0]",
                "attr": "this[1][0]"
            }
        }
    ],
    "attr": {
        "any": null,
        "plain": null,
        "object": null,
        "array": {
            "open": {
                "sym": "this[1][0]",
                "lo": null,
                "eq": {
                    "val": {
                        "type": "array",
                        "args": "this[1][0]"
                    },
                    "lo": null,
                    "hi": null
                },
                "hi": null
            },
            "closed": null
        }
    }
}'
) -L infinite.new <(
echo '$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'
json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; } 2>&1 ||
echo 'command failed: json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'

echo '$ json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this"}]}'\'''
json <<< '{"type":"list","args":["this",{"type":"array","args":"this"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this"}]}'\'''

echo '$ json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this[0]"}]}'\'''
json <<< '{"type":"list","args":["this",{"type":"array","args":"this[0]"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this[0]"}]}'\'''

echo '$ json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this[1]"}]}'\'''
json <<< '{"type":"list","args":["this",{"type":"array","args":"this[1]"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this[1]"}]}'\'''

echo '$ json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this[1][0]"}]}'\'''
json <<< '{"type":"list","args":["this",{"type":"array","args":"this[1][0]"}]}' 2>&1 ||
echo 'command failed: json <<< '\''{"type":"list","args":["this",{"type":"array","args":"this[1][0]"}]}'\'''
)

