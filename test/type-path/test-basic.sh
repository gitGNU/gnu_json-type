#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Json-Type.
# 
# Json-Type is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Json-Type is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Json-Type.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ json-gentest -C type-path:basic
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L basic.old <(echo \
'$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }
$ json <<< '\''"this"'\''
{
    "type": "this",
    "args": "this",
    "attr": "this"
}
$ json <<< '\''"this.foo"'\''
json: error: <stdin>:1:6: type path error: the type at 1:1 is neither an "object" nor a type def
json: error: <stdin>:1:6: "this.foo"
json: error: <stdin>:1:6:      ^
command failed: json <<< '\''"this.foo"'\''
$ json <<< '\''"this[0]"'\''
json: error: <stdin>:1:6: type path error: the type at 1:1 is neither an "array" nor a "list" nor a type def
json: error: <stdin>:1:6: "this[0]"
json: error: <stdin>:1:6:      ^
command failed: json <<< '\''"this[0]"'\''
$ json <<< '\''"$foo"'\''
json: error: <stdin>:1:2: type path error: the type at 1:1 is neither an "object" nor a type def
json: error: <stdin>:1:2: "$foo"
json: error: <stdin>:1:2:  ^
command failed: json <<< '\''"$foo"'\'''
) -L basic.new <(
echo '$ json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'
json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; } 2>&1 ||
echo 'command failed: json() { set -o pipefail && LD_LIBRARY_PATH=../lib ../src/json --literal-value -e 64 -V -Ta "$@"|LD_LIBRARY_PATH=../lib ../src/json --from-ast-print --verbose 2>/dev/null; }'

echo '$ json <<< '\''"this"'\'''
json <<< '"this"' 2>&1 ||
echo 'command failed: json <<< '\''"this"'\'''

echo '$ json <<< '\''"this.foo"'\'''
json <<< '"this.foo"' 2>&1 ||
echo 'command failed: json <<< '\''"this.foo"'\'''

echo '$ json <<< '\''"this[0]"'\'''
json <<< '"this[0]"' 2>&1 ||
echo 'command failed: json <<< '\''"this[0]"'\'''

echo '$ json <<< '\''"$foo"'\'''
json <<< '"$foo"' 2>&1 ||
echo 'command failed: json <<< '\''"$foo"'\'''
)

